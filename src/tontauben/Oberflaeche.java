/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tontauben;

import java.awt.Color;
import java.awt.Graphics;
import javax.swing.JTextField;
import javax.swing.JToggleButton;

/**
 *
 * @author radle
 */
public class Oberflaeche extends javax.swing.JPanel {

    private Steuerung steuerung;
    private static int xFK = -100, yFK = -100;
    public final int GEWONNEN = 1, VERLOREN = 2, LAUFT = 3;
    public JTextField textFeldStatus, textFeldNum, textSchuesse, textTrefferQ, highscore;
    public static JToggleButton debugButton;

    public Oberflaeche() {
        initComponents();
        steuerung = new Steuerung(this);

    }

    public void setzeTextFeld(JTextField textFeldS, JTextField textFeldNum, JTextField textSchuesse, JTextField textTrefferQ, JTextField highscore) {
        this.textFeldStatus = textFeldS;
        this.textFeldNum = textFeldNum;
        this.textSchuesse = textSchuesse;
        this.textTrefferQ = textTrefferQ;
        this.highscore = highscore;
        steuerung.statistikAnzeigen(); // die Textfelder füllen
    }

    public void neuzeichnen() {
        repaint();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.setColor(Color.LIGHT_GRAY);
        g.fillRect(0, 0, this.getWidth(), this.getHeight());
        for (int i = 0; i < Tontaube.gibAnzahlTontauben(); i++) {
            steuerung.gibTontauben()[i].zeichne(g);
            steuerung.gibTontauben()[i].setzexWelt(this.getWidth());
            steuerung.gibTontauben()[i].setzeyWelt(this.getHeight());
        }
        g.drawImage(Bild.gibBild(1, 5), xFK - Bild.gibBild(0, 1).getWidth() / 2, yFK - Bild.gibBild(0, 1).getHeight() / 2, this); //Fadenkreutz
    }

    public void zeigeStatus(int status) {
        switch (status) {
            case GEWONNEN:
                textFeldStatus.setText("Gewonnen");
                break;
            case VERLOREN:
                textFeldStatus.setText("Du hast deinen Freund getötet");
                break;
            case LAUFT:
                textFeldStatus.setText("Spiel läuft");
                break;
        }
    }

    public void zeigeStatistik(float schuesse, float treffer) {
        textSchuesse.setText(Integer.toString((int) schuesse));
        textFeldNum.setText(Integer.toString((int) treffer));
        if (schuesse != 0) {
            textTrefferQ.setText(Integer.toString(Math.round((treffer / schuesse) * 100)) + "%");
        }
    }

    public void zeigeHighscore(int score) {
        highscore.setText(Integer.toString(score) + "%");
    }

    public void setzeHighscore() {
        steuerung.highScoreSchreiben();
    }

    public void neustarten() {
        steuerung.neustarten();
    }

    public static boolean gibDebug() {
        return debugButton.isSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        steuerung.feuer();
    }//GEN-LAST:event_formMousePressed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        xFK = evt.getX();
        yFK = evt.getY();
    }//GEN-LAST:event_formMouseMoved

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        xFK = evt.getX();
        yFK = evt.getY();
    }//GEN-LAST:event_formMouseDragged

    public static int gibxFK() {
        return xFK;
    }

    public static int gibyFK() {
        return yFK;
    }

    void setzeDebugButton(JToggleButton debugButton) {
        this.debugButton = debugButton;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
